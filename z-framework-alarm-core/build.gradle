buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:${dependencymanagementplugin}"
    }
}
//
apply plugin: "io.spring.dependency-management"
apply plugin: 'java-library'
//apply plugin: 'eclipse'
//apply plugin: 'idea'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springclouddependencies}"
        mavenBom "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-redis-reactive')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-configuration-processor')
    compile('org.springframework.cloud:spring-cloud-context')
    compile('com.google.code.gson:gson:2.8.5')
    compile("org.apache.httpcomponents:httpclient:4.5.2")
    compile("org.projectlombok:lombok:${lombok}")
    annotationProcessor("org.projectlombok:lombok:${lombok}")
    compile project(':z-framework-core')

}


configurations {
    // 所有需要忽略的包定义在此
    //all*.exclude group: 'commons-httpclient'
    all*.exclude group: 'log4j'
    all*.exclude group: 'commons-logging'
    //all*.exclude group: 'ch.qos.logback'
    //all*.exclude group: "slf4j*"
}

gradle.taskGraph.whenReady {
    tasks.each { task ->
        if (task.name.contains("test")) {
            task.enabled = false
        }
    }
}

task clearLastBuild(type: Delete) {
    FileTree tree = fileTree("build")
    println(tree)
    tree.visit {
        ele -> delete ele.file
    }
    tree = fileTree("out")
    println(tree)
    tree.visit{
        ele ->delete ele.file
    }
}

