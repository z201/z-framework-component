spring:
  # 这是一个bug。。。EurekaClientAutoConfiguration 自己看源码
  security: #安全用户和密码
    user:
      name: z201
      password: z201!
      roles:
        - ADMIN
  profiles:
    active: dev1

logging:
  config: classpath:logback.xml

# 单节点单时候  register-with-eureka  和  enable-self-preservation 关掉
eureka:
  client:
    # 是否允许注册自己的信息到eureka服务器，默认是允许的。单节点单时候不能开启。
    register-with-eureka: true
    # 自己就是注册中心，所以不需要定期的更新客户端的服务清单，以保证服务访问的正确性。
    fetch-registry: false
  server:
    # 配置属性，保证不可用服务及时踢出 但由于 Eureka 自我保护模式以及心跳周期长的原因，经常会遇到 Eureka Server 不剔除已关停的节点的问题
    enable-self-preservation: true
    # 心跳阈值计算周期，开启自我保护模式所以在这里动
    renewal-threshold-update-interval-ms: 120000
    # 扫描服务失效时间，主动失效检测间隔（缺省为60*1000ms）这里改成3s
    eviction-interval-timer-in-ms: 3000
    #节点间的读数据连接超时时间
    peer-node-read-timeout-ms: 200
    # 禁用readOnlyCacheMap 毕竟是AP系统这个C干脆放弃吧。
    use-read-only-response-cache: false
  instance:
    # 表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，
    # server端没有收到client的心跳，则将摘除该instance。除此之外，如果该instance实现了HealthCheckCallback，
    # 并决定让自己unavailable的话，则该instance也不会接收到流量。
    lease-renewal-interval-in-seconds: 5
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
    # 默认为90秒
    # 如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
    # 如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
    # 该值至少应该大于leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 10
    # 为不使用主机名来定义注册中心的地址，而使用IP地址的形式，
    # 而defaultZone中是以域名的方式向注册中心注册的（测试了下使用IP注册到备份节点不可识别），
    # 最终导致分片节点不能识别匹配（IP地址与域名），而认为分片均处于不可达状态。
    # 但是这里需要注意，在测试环境下如果使用一台必须为false,正式环境是多台服务器所以改成true.不然还要去配置host有点坑了。
    prefer-ip-address: true
    # 实例名称  最后呈现地址：ip:2000
    instance-id: ${spring.cloud.client.ip-address}:${server.port}

